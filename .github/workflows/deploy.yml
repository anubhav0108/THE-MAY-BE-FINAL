name: Deploy Next.js static site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Stub server-only code for static export
        run: |
          # Create safe stubs for server actions so Next can statically export
          mkdir -p src/app || true
          cat > src/app/actions.ts <<'TS'
          // Stubbed server actions â€” replaced during CI so the site can be statically exported.
          export async function runGenerateTimetable(_input:any){
            return { success: true, data: { timetable: [], conflicts: [], report: 'stubbed in CI' } };
          }
          export async function runSuggestFaculty(_input:any){
            return { success: true, data: [] };
          }
          export async function runChatAssistant(_input:any){
            return { success: true, data: { messages: [] } };
          }
          TS

          mkdir -p src/lib/timetable || true
          cat > src/lib/timetable/generate-timetable.ts <<'TS'
          // Stubbed timetable generator for static export
          export type GenerateTimetableInput = any;
          export type GenerateTimetableOutput = { timetable: any[]; conflicts: any[]; report: string };
          export async function generateTimetable(_input: GenerateTimetableInput): Promise<GenerateTimetableOutput> {
            return { timetable: [], conflicts: [], report: 'stubbed in CI' };
          }
          TS

          cat > src/lib/timetable/suggest-faculty.ts <<'TS'
          // Stubbed suggest-faculty for static export
          export type SuggestFacultyInput = any;
          export async function suggestFaculty(_input: SuggestFacultyInput){
            return [];
          }
          TS

          mkdir -p src/ai/flows || true
          cat > src/ai/flows/chat-assistant.ts <<'TS'
          // Stubbed chat assistant flow for static export
          export type ChatAssistantInput = any;
          export async function runChat(_input: ChatAssistantInput){
            return { messages: [] };
          }
          TS

      - name: Build (static export)
        env:
          NEXT_PUBLIC_BASE_PATH: /SIH-REPO
        run: |
          npm run build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          publish_branch: gh-pages
          force_orphan: true
